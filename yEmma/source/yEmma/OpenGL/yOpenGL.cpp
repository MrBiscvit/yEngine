#include <yEmma/OpenGL/yOpenGLClass.h>
#if defined(yUSE_OPENGL)

#define yLOAD_GL_FUNCTION(Type, Name) Name = glGetProcAddress<Type>(#Name)

void yOpenGL_1_2::init_opengl_functions_1_2()
{
	yLOAD_GL_FUNCTION(PFNGLCOPYTEXSUBIMAGE3DPROC, glCopyTexSubImage3D);
	yLOAD_GL_FUNCTION(PFNGLDRAWRANGEELEMENTSPROC, glDrawRangeElements);
	yLOAD_GL_FUNCTION(PFNGLTEXIMAGE3DPROC, glTexImage3D);
	yLOAD_GL_FUNCTION(PFNGLTEXSUBIMAGE3DPROC, glTexSubImage3D);
}
void yOpenGL_1_3::init_opengl_functions_1_3()
{
	yLOAD_GL_FUNCTION(PFNGLACTIVETEXTUREPROC, glActiveTexture);
	yLOAD_GL_FUNCTION(PFNGLCLIENTACTIVETEXTUREPROC, glClientActiveTexture);
	yLOAD_GL_FUNCTION(PFNGLCOMPRESSEDTEXIMAGE1DPROC, glCompressedTexImage1D);
	yLOAD_GL_FUNCTION(PFNGLCOMPRESSEDTEXIMAGE2DPROC, glCompressedTexImage2D);
	yLOAD_GL_FUNCTION(PFNGLCOMPRESSEDTEXIMAGE3DPROC, glCompressedTexImage3D);
	yLOAD_GL_FUNCTION(PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC, glCompressedTexSubImage1D);
	yLOAD_GL_FUNCTION(PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC, glCompressedTexSubImage2D);
	yLOAD_GL_FUNCTION(PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC, glCompressedTexSubImage3D);
	yLOAD_GL_FUNCTION(PFNGLGETCOMPRESSEDTEXIMAGEPROC, glGetCompressedTexImage);
	yLOAD_GL_FUNCTION(PFNGLLOADTRANSPOSEMATRIXDPROC, glLoadTransposeMatrixd);
	yLOAD_GL_FUNCTION(PFNGLLOADTRANSPOSEMATRIXFPROC, glLoadTransposeMatrixf);
	yLOAD_GL_FUNCTION(PFNGLMULTTRANSPOSEMATRIXDPROC, glMultTransposeMatrixd);
	yLOAD_GL_FUNCTION(PFNGLMULTTRANSPOSEMATRIXFPROC, glMultTransposeMatrixf);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD1DPROC, glMultiTexCoord1d);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD1DVPROC, glMultiTexCoord1dv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD1FPROC, glMultiTexCoord1f);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD1FVPROC, glMultiTexCoord1fv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD1IPROC, glMultiTexCoord1i);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD1IVPROC, glMultiTexCoord1iv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD1SPROC, glMultiTexCoord1s);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD1SVPROC, glMultiTexCoord1sv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD2DPROC, glMultiTexCoord2d);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD2DVPROC, glMultiTexCoord2dv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD2FPROC, glMultiTexCoord2f);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD2FVPROC, glMultiTexCoord2fv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD2IPROC, glMultiTexCoord2i);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD2IVPROC, glMultiTexCoord2iv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD2SPROC, glMultiTexCoord2s);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD2SVPROC, glMultiTexCoord2sv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD3DPROC, glMultiTexCoord3d);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD3DVPROC, glMultiTexCoord3dv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD3FPROC, glMultiTexCoord3f);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD3FVPROC, glMultiTexCoord3fv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD3IPROC, glMultiTexCoord3i);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD3IVPROC, glMultiTexCoord3iv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD3SPROC, glMultiTexCoord3s);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD3SVPROC, glMultiTexCoord3sv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD4DPROC, glMultiTexCoord4d);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD4DVPROC, glMultiTexCoord4dv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD4FPROC, glMultiTexCoord4f);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD4FVPROC, glMultiTexCoord4fv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD4IPROC, glMultiTexCoord4i);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD4IVPROC, glMultiTexCoord4iv);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD4SPROC, glMultiTexCoord4s);
	yLOAD_GL_FUNCTION(PFNGLMULTITEXCOORD4SVPROC, glMultiTexCoord4sv);
	yLOAD_GL_FUNCTION(PFNGLSAMPLECOVERAGEPROC, glSampleCoverage);
}
void yOpenGL_1_4::init_opengl_functions_1_4()
{
	yLOAD_GL_FUNCTION(PFNGLBLENDCOLORPROC, glBlendColor);
	yLOAD_GL_FUNCTION(PFNGLBLENDEQUATIONPROC, glBlendEquation);
	yLOAD_GL_FUNCTION(PFNGLBLENDFUNCSEPARATEPROC, glBlendFuncSeparate);
	yLOAD_GL_FUNCTION(PFNGLFOGCOORDPOINTERPROC, glFogCoordPointer);
	yLOAD_GL_FUNCTION(PFNGLFOGCOORDDPROC, glFogCoordd);
	yLOAD_GL_FUNCTION(PFNGLFOGCOORDDVPROC, glFogCoorddv);
	yLOAD_GL_FUNCTION(PFNGLFOGCOORDFPROC, glFogCoordf);
	yLOAD_GL_FUNCTION(PFNGLFOGCOORDFVPROC, glFogCoordfv);
	yLOAD_GL_FUNCTION(PFNGLMULTIDRAWARRAYSPROC, glMultiDrawArrays);
	yLOAD_GL_FUNCTION(PFNGLMULTIDRAWELEMENTSPROC, glMultiDrawElements);
	yLOAD_GL_FUNCTION(PFNGLPOINTPARAMETERFPROC, glPointParameterf);
	yLOAD_GL_FUNCTION(PFNGLPOINTPARAMETERFVPROC, glPointParameterfv);
	yLOAD_GL_FUNCTION(PFNGLPOINTPARAMETERIPROC, glPointParameteri);
	yLOAD_GL_FUNCTION(PFNGLPOINTPARAMETERIVPROC, glPointParameteriv);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3BPROC, glSecondaryColor3b);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3BVPROC, glSecondaryColor3bv);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3DPROC, glSecondaryColor3d);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3DVPROC, glSecondaryColor3dv);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3FPROC, glSecondaryColor3f);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3FVPROC, glSecondaryColor3fv);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3IPROC, glSecondaryColor3i);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3IVPROC, glSecondaryColor3iv);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3SPROC, glSecondaryColor3s);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3SVPROC, glSecondaryColor3sv);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3UBPROC, glSecondaryColor3ub);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3UBVPROC, glSecondaryColor3ubv);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3UIPROC, glSecondaryColor3ui);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3UIVPROC, glSecondaryColor3uiv);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3USPROC, glSecondaryColor3us);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLOR3USVPROC, glSecondaryColor3usv);
	yLOAD_GL_FUNCTION(PFNGLSECONDARYCOLORPOINTERPROC, glSecondaryColorPointer);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS2DPROC, glWindowPos2d);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS2DVPROC, glWindowPos2dv);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS2FPROC, glWindowPos2f);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS2FVPROC, glWindowPos2fv);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS2IPROC, glWindowPos2i);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS2IVPROC, glWindowPos2iv);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS2SPROC, glWindowPos2s);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS2SVPROC, glWindowPos2sv);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS3DPROC, glWindowPos3d);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS3DVPROC, glWindowPos3dv);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS3FPROC, glWindowPos3f);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS3FVPROC, glWindowPos3fv);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS3IPROC, glWindowPos3i);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS3IVPROC, glWindowPos3iv);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS3SPROC, glWindowPos3s);
	yLOAD_GL_FUNCTION(PFNGLWINDOWPOS3SVPROC, glWindowPos3sv);
}

void yOpenGL::init()
{
	init_opengl_functions_1_2();
	init_opengl_functions_1_3();
	init_opengl_functions_1_4();
}

#endif